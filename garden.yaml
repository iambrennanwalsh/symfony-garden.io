apiVersion: garden.io/v1

kind: Project
name: Symfony Garden

environments:
  - name: local

defaultEnvironment: local

providers:
  - name: local-kubernetes
    environments: [local]
    namespace: symfony-garden

dotIgnoreFile: .gitignore
varfile: env.yaml
---
kind: Build
type: container
name: server
description: Caddy server.

include:
  - ./Dockerfile
  - ./server
  - ./app/public

spec:
  dockerfile: ./Dockerfile
  targetStage: server
---
kind: Deploy
type: container
name: server
description: Caddy server.
build: server
dependencies: [deploy.app]

spec:
  sync:
    paths:
      - source: ./server/Caddyfile
        target: /etc/caddy/Caddyfile
        mode: one-way

  volumes:
    - name: caddy-data
      containerPath: /data
    - name: caddy-config
      containerPath: /config

  ports:
    - name: http
      containerPort: 80
      servicePort: 80

  ingresses:
    - path: /
      port: http
      hostname: ${var.hostname}
---
kind: Deploy
type: container
name: database
description: Postgres database.

spec:
  image: postgres:15-alpine

  ports:
    - name: database
      containerPort: 5432

  volumes:
    - name: database
      containerPath: /db-data

  env:
    POSTGRES_PASSWORD:
      secretRef:
        name: postgres-password
        key: root
    POSTGRES_USERNAME: ${var.database.username}
    POSTGRES_DATABASE: ${var.database.database}
---
kind: Build
type: container
name: app
description: The application.

include:
  - ./Dockerfile
  - ./app

spec:
  dockerfile: ./Dockerfile
  targetStage: app
---
kind: Deploy
type: container
name: app
description: The application.
build: app
dependencies: [deploy.database]

spec:
  sync:
    paths:
      - source: ./app
        target: /srv/app
        mode: two-way

  ports:
    - name: app
      containerPort: 9000
      servicePort: 80

  env:
    POSTGRES_PASSWORD:
      secretRef:
        name: postgres-password
        key: root
    POSTGRES_USERNAME: ${var.database.username}
    POSTGRES_DATABASE: ${var.database.database}
